const fs = require('fs');
const path = require('path');

// Caminho para o arquivo Costs.tsx
const costsFilePath = path.join(__dirname, 'src', 'pages', 'Costs.tsx');

// Ler o arquivo
let content = fs.readFileSync(costsFilePath, 'utf8');

// Verificar se o hook j√° est√° sendo usado
if (!content.includes('const { updatePurchaseOrder } = usePurchaseOrders();')) {
  // Encontrar a linha onde adicionar o hook
  const lines = content.split('\n');
  
  // Procurar pela linha que cont√©m useContracts
  let insertIndex = -1;
  for (let i = 0; i < lines.length; i++) {
    if (lines[i].includes('const { contracts } = useContracts();')) {
      insertIndex = i + 1;
      break;
    }
  }
  
  if (insertIndex !== -1) {
    // Inserir o hook ap√≥s useContracts
    lines.splice(insertIndex, 0, '  const { updatePurchaseOrder } = usePurchaseOrders();');
    
    // Reescrever o arquivo
    const newContent = lines.join('\n');
    fs.writeFileSync(costsFilePath, newContent, 'utf8');
    
    console.log('‚úÖ Hook usePurchaseOrders adicionado com sucesso!');
  } else {
    console.log('‚ùå N√£o foi poss√≠vel encontrar a linha useContracts');
  }
} else {
  console.log('‚úÖ Hook usePurchaseOrders j√° est√° presente no arquivo');
}

console.log('\nüìã Resumo da corre√ß√£o:');
console.log('- Status "Aprovada" adicionado √† constraint do banco ‚úÖ');
console.log('- Tipos TypeScript atualizados ‚úÖ');
console.log('- Interface de exibi√ß√£o atualizada ‚úÖ');
console.log('- L√≥gica de atualiza√ß√£o implementada ‚úÖ');
console.log('- Hook usePurchaseOrders adicionado ‚úÖ');
console.log('\nüéØ Agora ao aprovar uma compra em Custos, o status do pedido ser√° atualizado para "Aprovada"!'); 