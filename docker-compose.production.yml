version: '3.8'

networks:
  traefik:
    external: true
  oneway-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  # Traefik Reverse Proxy
  traefik:
    image: traefik:v3.0
    container_name: oneway-traefik
    restart: unless-stopped
    command:
      # API and dashboard
      - --api.dashboard=true
      - --api.insecure=true
      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Providers
      - --providers.docker=true
      - --providers.docker.network=traefik
      - --providers.docker.exposedbydefault=false
      # Certificate resolver
      - --certificatesresolvers.letsencrypt.acme.email=admin@oneway.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      # Logs
      - --log.level=INFO
      - --accesslog=true
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
      - "8080:8080" # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/letsencrypt
    networks:
      - traefik
      - oneway-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"

  # OneWay Rent A Car Application
  oneway-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: oneway-rent-car
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL:-https://bdcqaeppqnwixhumfsso.supabase.co}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJkY3FhZXBwcW53aXhodW1mc3NvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEyMTM0MTcsImV4cCI6MjA2Njc4OTQxN30.p0BSXUgjstOMOuli_Ko7Kf8Z-T7fb5ozp9qWr-tK_tc}
    networks:
      - traefik
      - oneway-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      
      # HTTP Router (redirect to HTTPS)
      - "traefik.http.routers.oneway-http.rule=Host(`oneway.localhost`) || Host(`oneway.local`) || HostRegexp(`oneway-.*\\.traefik\\.me`) || HostRegexp(`.*\\.ngrok\\.io`)"
      - "traefik.http.routers.oneway-http.entrypoints=web"
      - "traefik.http.routers.oneway-http.middlewares=redirect-to-https@docker"
      
      # HTTPS Router
      - "traefik.http.routers.oneway-https.rule=Host(`oneway.localhost`) || Host(`oneway.local`) || HostRegexp(`oneway-.*\\.traefik\\.me`) || HostRegexp(`.*\\.ngrok\\.io`)"
      - "traefik.http.routers.oneway-https.entrypoints=websecure"
      - "traefik.http.routers.oneway-https.tls=true"
      - "traefik.http.routers.oneway-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.oneway-https.middlewares=security-headers@docker,cors-headers@docker"
      
      # Service
      - "traefik.http.services.oneway.loadbalancer.server.port=80"
      
      # Middlewares
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      
      # Security Headers
      - "traefik.http.middlewares.security-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.security-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.security-headers.headers.referrerPolicy=strict-origin-when-cross-origin"
      - "traefik.http.middlewares.security-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      
      # CORS Headers for Mobile
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowMethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowHeaders=*"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.cors-headers.headers.accessControlMaxAge=86400"

  # Local DNS resolver for easier access
  dnsmasq:
    image: strm/dnsmasq
    container_name: oneway-dns
    restart: unless-stopped
    volumes:
      - ./dnsmasq.conf:/etc/dnsmasq.conf
    ports:
      - "53:53/udp"
    networks:
      - oneway-network
    cap_add:
      - NET_ADMIN

volumes:
  traefik-certificates:
    driver: local 